<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.zbo.nexus.test</groupId>
  <artifactId>base-web</artifactId>
  <version>0.0.3-SNAPSHOT</version>
  <packaging>pom</packaging>

  <name>base-web</name>


  <!--git 远程仓库配置-->
  <scm>
    <url>scm:git:git@github.com:zbo2018/nexusTest.git</url>
    <connection>scm:git:git@github.com:zbo2018/nexusTest.git</connection>
    <developerConnection>scm:git:git@github.com:zbo2018/nexusTest.git</developerConnection>
    <tag>HEAD</tag>
  </scm>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>1.7</maven.compiler.source>
    <maven.compiler.target>1.7</maven.compiler.target>
    <jdk-version>1.8</jdk-version>
    <source-plugin-version>3.0.1</source-plugin-version>
    <compiler-plugin-version>3.6.1</compiler-plugin-version>
    <!-- javadoc plugin -->
    <maven-javadoc-version>3.0.0</maven-javadoc-version>
    <!--spring-boot spring-cloud spring-cloud-alibaba-->
    <spring-boot.version>2.6.3</spring-boot.version>
    <spring-cloud.version>2021.0.1</spring-cloud.version>
    <spring-redis.version>2.3.12.RELEASE</spring-redis.version>
    <spring-cloud-alibaba.version>2021.0.1.0</spring-cloud-alibaba.version>
    <!-- orm version -->
    <mysql-version>8.0.28</mysql-version>
    <mybatis-plus-version>3.4.3.4</mybatis-plus-version>
    <druid-starter-version>1.2.8</druid-starter-version>
    <!-- JSON -->
    <gson.version>2.8.5</gson.version>
    <jackson-bom.version>2.11.4</jackson-bom.version>
    <!-- nacos -->
    <nacos.spring-cloud.version>2.2.7.RELEASE</nacos.spring-cloud.version>
    <!-- slf4j -->
    <slf4j.version>1.7.33</slf4j.version>
    <logback.version>1.2.11</logback.version>
    <!-- Common -->
    <commons-lang3.version>3.12.0</commons-lang3.version>
    <!-- servlet -->
    <servlet.version>3.1.0</servlet.version>

    <failOnMissingWebXml>false</failOnMissingWebXml>
    <xxl-job.version>2.3.1</xxl-job.version>
    <hutool.version>5.7.20</hutool.version>
  </properties>

  <!-- Unified management of version numbers of public dependencies -->
  <dependencyManagement>
    <dependencies>
      <!-- Spring Boot dependencies -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- Spring Cloud dependencies-->
      <dependency>
        <groupId>org.springframework.cloud</groupId>
        <artifactId>spring-cloud-dependencies</artifactId>
        <version>${spring-cloud.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>
      <!-- Spring Boot Redis -->
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-data-redis</artifactId>
        <version>${spring-redis.version}</version>
      </dependency>

      <!-- Spring Cloud Alibaba dependencies-->
      <dependency>
        <groupId>com.alibaba.cloud</groupId>
        <artifactId>spring-cloud-alibaba-dependencies</artifactId>
        <version>${spring-cloud-alibaba.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <!-- ### ORM Start ### -->
      <dependency>
        <groupId>com.baomidou</groupId>
        <artifactId>mybatis-plus-boot-starter</artifactId>
        <version>${mybatis-plus-version}</version>
      </dependency>
      <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>${mysql-version}</version>
      </dependency>
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>druid-spring-boot-starter</artifactId>
        <version>${druid-starter-version}</version>
      </dependency>
      <!-- ### ORM End ### -->

      <!--logging framework-->
      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
          </exclusion>
        </exclusions>
        <scope>compile</scope>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <!-- job frameword xxl-job -->
      <!--<dependency>
        <groupId>com.xuxueli</groupId>
        <artifactId>xxl-job-core</artifactId>
        <version>${xxl-job.version}</version>
      </dependency>

      <dependency>
        <groupId>cn.hutool</groupId>
        <artifactId>hutool-all</artifactId>
        <version>${hutool.version}</version>
      </dependency>-->

      <!-- ### Other Public Dependencies Start ### -->
      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>${gson.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons-lang3.version}</version>
      </dependency>
      <!-- ### Other Public Dependencies End ### -->
    </dependencies>
  </dependencyManagement>


  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>${compiler-plugin-version}</version>
        <configuration>
          <source>${jdk-version}</source>
          <target>${jdk-version}</target>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>${source-plugin-version}</version>
        <configuration>
          <attach>true</attach>
        </configuration>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.0.0-M5</version>
        <configuration>
          <skipTests>true</skipTests>
        </configuration>
      </plugin>


      <!--
                maven release插件：自动发布到maven仓库
                作用：
                    修改多模块项目的版本号
                    修改好的版本号还需要用deploy命令将其发布到私有的maven仓库
                执行过程：
                    将当前的SNAPSHOT版本号修改为正式版；
                    然后在SCM服务器（SVN或git）上打一个该版本的tag，编译程序并自动生成jar包、source源码包和javadoc文档包然后发布到指定的maven服务器上
                    最后将当前的版本号增加为新的版本号并修改为SNAPSHOT，这样就相当于一个自动构建的流程了。
            -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-release-plugin</artifactId>
        <version>3.0.0-M6</version>
        <configuration>
          <!--官方文档 https://maven.apache.org/maven-release/maven-release-plugin/prepare-mojo.html-->
          <!-- 是否允许带时间戳的 SNAPSHOT 依赖项。 默认false-->
          <allowTimestampedSnapshots>true</allowTimestampedSnapshots>
          <!--是否为子版本分配父亲版本号，默认false-->
          <autoVersionSubmodules>true</autoVersionSubmodules>
          <!--release:perform中参数 https://maven.apache.org/maven-release/maven-release-plugin/perform-mojo.html-->
          <!--发布配置文件将从未来版本的super pom中删除 默认false-->
          <!--在执行mvn release:perform时默认会生成api文档，如果默写注释不符合规范的话会造成构建失败，可以加参数-DuseReleaseProfile=false取消构建api文档，或则需要根据规范书写注释。-->
          <useReleaseProfile>false</useReleaseProfile>
        </configuration>
      </plugin>

    </plugins>
  </build>


  <!--分发配置-->
  <distributionManagement>
    <!--定义snapshots仓库-->
    <snapshotRepository>
      <id>nexus-snapshots</id>
      <name>snapshots-name</name>
      <url>http://10.10.27.166:8081/repository/maven-snapshots/</url>
      <uniqueVersion>true</uniqueVersion>
    </snapshotRepository>

    <!--定义release仓库地址-->
    <repository>
      <id>nexus-releases</id>
      <name>releases-name</name>
      <url>http://10.10.27.166:8081/repository/maven-releases/</url>
      <uniqueVersion>true</uniqueVersion>
    </repository>
  </distributionManagement>
</project>
